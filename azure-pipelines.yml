# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

variables:
  ConnectedServiceName: 'MyAzureResourceManagerServiceConnection'
  WebAppName: 'clt-homicide-uat'

trigger:
- master

pool:
  name: Hosted Ubuntu 1604

steps:
- task: UsePythonVersion@0
  displayName: 'PyVer'
  inputs:
    versionSpec: '3.6'
    architecture: 'x64'

- script: |
    displayName: 'Depend'
    pip install setuptools
    pip install -r requirements.txt

- script: |
    displayName: 'Run tests'
    pushd '$(projectRoot)'
    python manage.py test tracker --no-input

- script: |     
  displayName: 'Run pytests'
   pytest --junitxml=reports/django-basic.xml     


- task: ArchiveFiles@2
  displayName: 'Archiver'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: # Optional

- task: AzureRMWebAppDeployment@4
  displayName: Azure App Service Deploy
  inputs:
    appType: webAppLinux
    RuntimeStack: 'PYTHON|3.6'
    ConnectedServiceName: $(ConnectedServiceName)
    WebAppName: $(WebAppName)
    Package: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'

    # The following command is specific to the python-sample-vscode-flask-tutorial code.
    # You may or may not need a startup command for your own app.

    StartupCommand: 'gunicorn --bind=0.0.0.0 --timeout 600 homicide.wsgi'

